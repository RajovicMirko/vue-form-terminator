// ADDITIONAL with outside elements setup
.group-data {
  @media (min-width: $min-width) {
    @for $i from 1 through 10 {
      & .inputnator:first-child:nth-last-child(#{$i}),
      & .inputnator:first-child:nth-last-child(#{$i}) ~ .inputnator {
        width: calc(100% / #{$i} - 1rem);
      }
    }
  }
}

// Global definition ////////////////////////////////////////////////////////////////////////////////
.inputnator {
  position: relative;
  display: flex;
  flex-direction: column;
  font-size: 1.2rem;
  margin: 0 0 0.2em 0;
  padding: 1.2rem 0;
  width: 100%;

  & input {
    position: relative;
    width: 100%;

    &.left {
      text-align: left;
    }
    &.center {
      text-align: center;
    }
    &.right {
      text-align: right;
    }

    &.invalid {
      box-shadow: 0 0 0 1px $invalid-color;
      border-color: transparent;

      &:hover {
        box-shadow: 0 0 2px 0.5px $invalid-color;
      }

      &:focus {
        border-color: transparent;
        box-shadow: 0 0 0 2px $invalid-color;
      }
    }
  }

  & label,
  & .errornator {
    position: absolute;

    &.left {
      align-self: flex-start;
    }
    &.center {
      align-self: center;
    }
    &.right {
      align-self: flex-end;
    }

    &.none {
      display: none;
    }
  }

  & label {
    margin: 0;
    padding: 0;

    &.top {
      top: -0.2rem;
    }

    &.bottom {
      bottom: -0.2rem;
    }
  }

  & .errornator {
    margin: 0;
    padding: 0;
    color: $invalid-color;
    white-space: nowrap;

    &.top {
      top: -0.1rem;
    }

    &.bottom {
      bottom: -0.1rem;
    }
  }

  // Other type of inputs logic
  // CHECKBOX
  &.checkboxnator {
    padding: 0;
    margin-bottom: 1rem;
    flex-direction: row;
    align-items: center;
    height: 1rem;
    line-height: 1rem;

    & label,
    & small.errornator.invalid {
      align-self: center;
      position: relative;
      margin: 0 !important;
    }

    & label {
      font-size: 0.9rem;
    }

    & input {
      $checkbox-size: 1.4;

      width: auto;
      margin: 0 1rem;

      -ms-transform: scale($checkbox-size); /* IE */
      -moz-transform: scale($checkbox-size); /* FF */
      -webkit-transform: scale($checkbox-size); /* Safari and Chrome */
      -o-transform: scale($checkbox-size); /* Opera */
      transform: scale($checkbox-size);
    }

    &.left {
      &.reverse {
        flex-direction: row-reverse;
        justify-content: flex-end;
      }
    }

    &.center {
      justify-content: center;

      &.reverse {
        flex-direction: row-reverse;
      }
    }

    &.right {
      flex-direction: row-reverse;

      &.reverse {
        flex-direction: row;
        justify-content: flex-end;
      }
    }
  }
}
